<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="10" passed="8" failed="2" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2024-10-25T00:02:22 IST" name="Master Suite" finished-at="2024-10-25T00:03:43 IST" duration-ms="80412">
    <groups>
      <group name="Master">
        <method signature="AssignLeaveTest.verifyAssignLeavebtn()[pri:1, instance:testCases.AssignLeaveTest@245b4bdc]" name="verifyAssignLeavebtn" class="testCases.AssignLeaveTest"/>
        <method signature="AssignLeaveTest.verifyInvalidEmployeename()[pri:2, instance:testCases.AssignLeaveTest@245b4bdc]" name="verifyInvalidEmployeename" class="testCases.AssignLeaveTest"/>
        <method signature="AssignLeaveTest.verifyLeaveTypeOption()[pri:3, instance:testCases.AssignLeaveTest@245b4bdc]" name="verifyLeaveTypeOption" class="testCases.AssignLeaveTest"/>
        <method signature="TC_001_DataProviderLoginTest.testLoginData(java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:testCases.TC_001_DataProviderLoginTest@399f45b1]" name="testLoginData" class="testCases.TC_001_DataProviderLoginTest"/>
        <method signature="TC_LoginTest.testLogin()[pri:1, instance:testCases.TC_LoginTest@38c6f217]" name="testLogin" class="testCases.TC_LoginTest"/>
        <method signature="TC_LoginTest.testLoginNegative(java.lang.String,java.lang.String)[pri:2, instance:testCases.TC_LoginTest@38c6f217]" name="testLoginNegative" class="testCases.TC_LoginTest"/>
      </group> <!-- Master -->
      <group name="Sanity">
        <method signature="AssignLeaveTest.verifyAssignLeavebtn()[pri:1, instance:testCases.AssignLeaveTest@245b4bdc]" name="verifyAssignLeavebtn" class="testCases.AssignLeaveTest"/>
        <method signature="TC_LoginTest.testLogin()[pri:1, instance:testCases.TC_LoginTest@38c6f217]" name="testLogin" class="testCases.TC_LoginTest"/>
      </group> <!-- Sanity -->
      <group name="Regression">
        <method signature="TC_001_DataProviderLoginTest.testLoginData(java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:testCases.TC_001_DataProviderLoginTest@399f45b1]" name="testLoginData" class="testCases.TC_001_DataProviderLoginTest"/>
        <method signature="TC_LoginTest.testLogin()[pri:1, instance:testCases.TC_LoginTest@38c6f217]" name="testLogin" class="testCases.TC_LoginTest"/>
      </group> <!-- Regression -->
      <group name="Datadriven">
        <method signature="TC_LoginTest.testLoginNegative(java.lang.String,java.lang.String)[pri:2, instance:testCases.TC_LoginTest@38c6f217]" name="testLoginNegative" class="testCases.TC_LoginTest"/>
      </group> <!-- Datadriven -->
    </groups>
    <test started-at="2024-10-25T00:02:22 IST" name="Test" finished-at="2024-10-25T00:03:43 IST" duration-ms="80412">
      <class name="testCases.TC_001_DataProviderLoginTest">
        <test-method is-config="true" signature="testSetUp(java.lang.String,java.lang.String)[pri:0, instance:testCases.TC_001_DataProviderLoginTest@399f45b1]" started-at="2024-10-25T00:02:52 IST" name="testSetUp" finished-at="2024-10-25T00:03:03 IST" duration-ms="10699" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSetUp -->
        <test-method signature="testLoginData(java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:testCases.TC_001_DataProviderLoginTest@399f45b1]" started-at="2024-10-25T00:03:05 IST" name="testLoginData" data-provider="LoginData" finished-at="2024-10-25T00:03:11 IST" duration-ms="5799" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Admin]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[admin123]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[valid]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLoginData -->
        <test-method signature="testLoginData(java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:testCases.TC_001_DataProviderLoginTest@399f45b1]" started-at="2024-10-25T00:03:11 IST" name="testLoginData" data-provider="LoginData" finished-at="2024-10-25T00:03:13 IST" duration-ms="2234" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[Admin]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[admin1234]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[valid]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertTrue(Assert.java:45)
at org.testng.Assert.assertTrue(Assert.java:55)
at testCases.TC_001_DataProviderLoginTest.testLoginData(TC_001_DataProviderLoginTest.java:43)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLoginData -->
        <test-method signature="testLoginData(java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:testCases.TC_001_DataProviderLoginTest@399f45b1]" started-at="2024-10-25T00:03:13 IST" name="testLoginData" data-provider="LoginData" finished-at="2024-10-25T00:03:17 IST" duration-ms="4132" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[Admin]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[admin123]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[invalid]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertTrue(Assert.java:45)
at org.testng.Assert.assertTrue(Assert.java:55)
at testCases.TC_001_DataProviderLoginTest.testLoginData(TC_001_DataProviderLoginTest.java:50)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLoginData -->
        <test-method signature="testLoginData(java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:testCases.TC_001_DataProviderLoginTest@399f45b1]" started-at="2024-10-25T00:03:17 IST" name="testLoginData" data-provider="LoginData" finished-at="2024-10-25T00:03:20 IST" duration-ms="2891" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Adminn]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[admin12345]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[invalid]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLoginData -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:testCases.TC_001_DataProviderLoginTest@399f45b1]" started-at="2024-10-25T00:03:20 IST" name="tearDown" finished-at="2024-10-25T00:03:21 IST" duration-ms="460" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- testCases.TC_001_DataProviderLoginTest -->
      <class name="testCases.AssignLeaveTest">
        <test-method is-config="true" signature="testSetUp(java.lang.String,java.lang.String)[pri:0, instance:testCases.AssignLeaveTest@245b4bdc]" started-at="2024-10-25T00:02:23 IST" name="testSetUp" finished-at="2024-10-25T00:02:42 IST" duration-ms="18793" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSetUp -->
        <test-method signature="verifyAssignLeavebtn()[pri:1, instance:testCases.AssignLeaveTest@245b4bdc]" started-at="2024-10-25T00:02:42 IST" name="verifyAssignLeavebtn" finished-at="2024-10-25T00:02:47 IST" duration-ms="4924" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyAssignLeavebtn -->
        <test-method signature="verifyInvalidEmployeename()[pri:2, instance:testCases.AssignLeaveTest@245b4bdc]" started-at="2024-10-25T00:02:47 IST" name="verifyInvalidEmployeename" finished-at="2024-10-25T00:02:50 IST" depends-on-methods="testCases.AssignLeaveTest.verifyAssignLeavebtn" duration-ms="3321" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyInvalidEmployeename -->
        <test-method signature="verifyLeaveTypeOption()[pri:3, instance:testCases.AssignLeaveTest@245b4bdc]" started-at="2024-10-25T00:02:50 IST" name="verifyLeaveTypeOption" finished-at="2024-10-25T00:02:51 IST" depends-on-methods="testCases.AssignLeaveTest.verifyAssignLeavebtn" duration-ms="880" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyLeaveTypeOption -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:testCases.AssignLeaveTest@245b4bdc]" started-at="2024-10-25T00:02:51 IST" name="tearDown" finished-at="2024-10-25T00:02:52 IST" duration-ms="978" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- testCases.AssignLeaveTest -->
      <class name="testCases.TC_LoginTest">
        <test-method is-config="true" signature="testSetUp(java.lang.String,java.lang.String)[pri:0, instance:testCases.TC_LoginTest@38c6f217]" started-at="2024-10-25T00:03:21 IST" name="testSetUp" finished-at="2024-10-25T00:03:32 IST" duration-ms="11180" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSetUp -->
        <test-method signature="testLogin()[pri:1, instance:testCases.TC_LoginTest@38c6f217]" started-at="2024-10-25T00:03:32 IST" name="testLogin" finished-at="2024-10-25T00:03:36 IST" duration-ms="4659" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLogin -->
        <test-method signature="testLoginNegative(java.lang.String,java.lang.String)[pri:2, instance:testCases.TC_LoginTest@38c6f217]" started-at="2024-10-25T00:03:37 IST" name="testLoginNegative" data-provider="dp" finished-at="2024-10-25T00:03:40 IST" duration-ms="3404" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Admin]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[123456]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLoginNegative -->
        <test-method signature="testLoginNegative(java.lang.String,java.lang.String)[pri:2, instance:testCases.TC_LoginTest@38c6f217]" started-at="2024-10-25T00:03:40 IST" name="testLoginNegative" data-provider="dp" finished-at="2024-10-25T00:03:42 IST" duration-ms="2099" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[ad]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[admin123]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLoginNegative -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:testCases.TC_LoginTest@38c6f217]" started-at="2024-10-25T00:03:42 IST" name="tearDown" finished-at="2024-10-25T00:03:43 IST" duration-ms="571" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- testCases.TC_LoginTest -->
    </test> <!-- Test -->
  </suite> <!-- Master Suite -->
</testng-results>
